// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oceyra.Dbml.Generator.Samples;

#nullable disable

namespace Oceyra.Dbml.Generator.Samples.Migrations.TaskManagerDb
{
    [DbContext(typeof(TaskManagerDbContext))]
    partial class TaskManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Oceyra.Dbml.Generator.Samples.Project", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasColumnType("TEXT")
                        .HasColumnName("project_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("project_name");

                    b.Property<string>("Requirements")
                        .HasColumnType("TEXT")
                        .HasColumnName("requirements");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<string>("TaskPlan")
                        .HasColumnType("TEXT")
                        .HasColumnName("task_plan");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("ProjectId");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("Oceyra.Dbml.Generator.Samples.TaskDependency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("DependencyTaskId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dependency_task_id");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("project_id");

                    b.Property<string>("TaskId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("task_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DependencyTaskId");

                    b.HasIndex(new[] { "TaskId", "DependencyTaskId", "ProjectId" }, "public_index_1")
                        .IsUnique();

                    b.ToTable("task_dependencies", (string)null);
                });

            modelBuilder.Entity("Oceyra.Dbml.Generator.Samples.TaskResult", b =>
                {
                    b.Property<string>("TaskId")
                        .HasColumnType("TEXT")
                        .HasColumnName("task_id");

                    b.Property<string>("AgentType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("agent_type");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<long?>("EstimatedHours")
                        .HasColumnType("INTEGER")
                        .HasColumnName("estimated_hours");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Priority")
                        .HasColumnType("TEXT")
                        .HasColumnName("priority");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("project_id");

                    b.Property<string>("ResultData")
                        .HasColumnType("TEXT")
                        .HasColumnName("result_data");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("TaskId");

                    b.HasIndex("ProjectId");

                    b.HasIndex(new[] { "TaskId", "AgentType", "ProjectId" }, "public_idx_task_results_task_id_agent_type")
                        .IsUnique();

                    b.ToTable("task_results", (string)null);
                });

            modelBuilder.Entity("Oceyra.Dbml.Generator.Samples.TaskDependency", b =>
                {
                    b.HasOne("Oceyra.Dbml.Generator.Samples.TaskResult", "DependencyTaskNavigation")
                        .WithMany("DependencyTasks")
                        .HasForeignKey("DependencyTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DependencyTaskNavigation");
                });

            modelBuilder.Entity("Oceyra.Dbml.Generator.Samples.TaskResult", b =>
                {
                    b.HasOne("Oceyra.Dbml.Generator.Samples.Project", "ProjectNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectNavigation");
                });

            modelBuilder.Entity("Oceyra.Dbml.Generator.Samples.Project", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Oceyra.Dbml.Generator.Samples.TaskResult", b =>
                {
                    b.Navigation("DependencyTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
